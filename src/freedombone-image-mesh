#!/bin/bash
#
# .---.                  .              .
# |                      |              |
# |--- .--. .-.  .-.  .-.|  .-. .--.--. |.-.  .-. .--.  .-.
# |    |   (.-' (.-' (   | (   )|  |  | |   )(   )|  | (.-'
# '    '     --'  --'  -' -  -' '  '   -' -'   -' '   -  --'
#
#                    Freedom in the Cloud
#
# This command is run on initial install in order to set up a mesh router
#
# License
# =======
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

PROJECT_NAME='freedombone'

export TEXTDOMAIN=${PROJECT_NAME}-image-mesh
export TEXTDOMAINDIR="/usr/share/locale"

MY_USERNAME='fbone'
PEER_ID=

function change_avahi_name {
    decarray=( 1 2 3 4 5 6 7 8 9 0 )
    PEER_ID=${decarray[$RANDOM%10]}${decarray[$RANDOM%10]}${decarray[$RANDOM%10]}${decarray[$RANDOM%10]}${decarray[$RANDOM%10]}${decarray[$RANDOM%10]}${decarray[$RANDOM%10]}${decarray[$RANDOM%10]}
    sed -i "s|#host-name=.*|host-name=P$PEER_ID|g" /etc/avahi/avahi-daemon.conf
    sed -i "s|host-name=.*|host-name=P$PEER_ID|g" /etc/avahi/avahi-daemon.conf
    echo "New avahi name for this peer is P$PEER_ID"
    toilet "mesh-$PEER_ID"
}

function regenerate_ssh_host_keys {
    echo $"Regenerating ssh host keys"
    rm -f /etc/ssh/ssh_host_*
    dpkg-reconfigure openssh-server
    echo $'ssh host keys regenerated'
    # remove small moduli
    awk '$5 > 2000' /etc/ssh/moduli > ~/moduli
    mv ~/moduli /etc/ssh/moduli
    echo $'ssh small moduli removed'
}

function configure_zeronet {
    sed -i "s|replace.local|P${PEER_ID}.local|g" /etc/systemd/system/zeronet.service
}

function configure_zeronet_blog {
    echo $'Updating ZeroNet Blog'
    ZERONET_DEFAULT_BLOG_TITLE="${MY_USERNAME}'s Blog"

    cd /opt/zeronet
    python zeronet.py --batch siteCreate 2> /opt/zeronet/blog.txt
    if [ ! -f /opt/zeronet/blog.txt ]; then
        echo $'Unable to create ZeroNet blog'
        exit 7386
    fi
    blog_address=$(cat blog.txt | grep "Site address" | awk -F ':' '{print $2}')
    blog_private_key=$(cat blog.txt | grep "Site private key" | awk -F ':' '{print $2}')
    ZERONET_BLOG_ADDRESS=${blog_address//[[:blank:]]/}
    ZERONET_BLOG_PRIVATE_KEY=${blog_private_key//[[:blank:]]/}

    if [ ${#ZERONET_BLOG_ADDRESS} -lt 20 ]; then
        echo $"Address:    $ZERONET_BLOG_ADDRESS"
        echo $"Public key: $ZERONET_BLOG_PRIVATE_KEY"
        echo $'Unable to create zeronet blog address'
        exit 7358
    fi

    if [ ${#ZERONET_BLOG_PRIVATE_KEY} -lt 20 ]; then
        echo $"Address:    $ZERONET_BLOG_ADDRESS"
        echo $"Public key: $ZERONET_BLOG_PRIVATE_KEY"
        echo $'Unable to create zeronet blog private key'
        exit 1639
    fi

    if [ ! -d "/opt/zeronet/data/$ZERONET_BLOG_ADDRESS" ]; then
        echo $"Unable to find site directory: /opt/zeronet/data/$ZERONET_BLOG_ADDRESS"
        exit 7638
    fi

    echo $"ZeroNet Blog address:     $ZERONET_BLOG_ADDRESS"
    echo $"ZeroNet Blog private key: $ZERONET_BLOG_PRIVATE_KEY"
    cp -r /opt/zeronet/ZeroBlog/* /opt/zeronet/data/$ZERONET_BLOG_ADDRESS

    if [ ! -d /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/data ]; then
        mkdir /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/data
    fi
    cp /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/data-default/data.json /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/data
    sed -i "s/MyZeroBlog/$ZERONET_DEFAULT_BLOG_TITLE/g" /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/data/data.json
    sed -i "s/My ZeroBlog./$ZERONET_DEFAULT_BLOG_TAGLINE/g" /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/data/data.json
    sed -i "s/ZeroBlog Demo/$ZERONET_DEFAULT_BLOG_TITLE/g" /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/index.html
    sed -i "s|<h3 class=\"description\">.*|<h3 class=\"description\">$ZERONET_DEFAULT_BLOG_TAGLINE</h3>|g" /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/index.html
    sed -i "s/Blogging platform Demo/Blogging platform/g" /opt/zeronet/data/$ZERONET_BLOG_ADDRESS/content.json
    python zeronet.py siteSign $ZERONET_BLOG_ADDRESS $ZERONET_BLOG_PRIVATE_KEY

    # update the avahi service
    echo '<?xml version="1.0" standalone="no"?><!--*-nxml-*-->' > /tmp/zeronet-blog.service
    echo '<!DOCTYPE service-group SYSTEM "avahi-service.dtd">' >> /tmp/zeronet-blog.service
    echo '<service-group>' >> /tmp/zeronet-blog.service
    echo '  <name replace-wildcards="yes">%h ZeroNet Blog</name>' >> /tmp/zeronet-blog.service
    echo '  <service>' >> /tmp/zeronet-blog.service
    echo '    <type>_zeronet._udp</type>' >> /tmp/zeronet-blog.service
    echo "    <port>$ZERONET_PORT</port>" >> /tmp/zeronet-blog.service
    echo "    <txt-record>$ZERONET_URL/$ZERONET_BLOG_ADDRESS</txt-record>" >> /tmp/zeronet-blog.service
    echo '  </service>' >> /tmp/zeronet-blog.service
    echo '</service-group>' >> /tmp/zeronet-blog.service
    cp /tmp/zeronet-blog.service /etc/avahi/services/zeronet-blog.service

    if [ ! -d /home/$MY_USERNAME/.config/zeronet ]; then
        mkdir -p /home/$MY_USERNAME/.config/zeronet
        chown -R $MY_USERNAME:$MY_USERNAME /home/$MY_USERNAME/.config
    fi
    echo "$ZERONET_URL/$ZERONET_BLOG_ADDRESS" > /home/$MY_USERNAME/.config/zeronet/myblog

    sed -i "s|ZeroNet Blog address.*|ZeroNet Blog address: $ZERONET_BLOG_ADDRESS|g" /home/$MY_USERNAME/README
    sed -i "s|ZeroNet Blog private key.*|ZeroNet Blog private key: $ZERONET_BLOG_PRIVATE_KEY|g" /home/$MY_USERNAME/README
}

function configure_zeronet_mail {
    echo $'Updating ZeroNet Mail'
    ZERONET_DEFAULT_MAIL_TITLE="${MY_USERNAME}'s Mail"

    cd /opt/zeronet
    python zeronet.py --batch siteCreate 2> /opt/zeronet/mail.txt
    if [ ! -f /opt/zeronet/mail.txt ]; then
        echo $'Unable to create ZeroNet mail'
        exit 72574
    fi
    mail_address=$(cat mail.txt | grep "Site address" | awk -F ':' '{print $2}')
    mail_private_key=$(cat mail.txt | grep "Site private key" | awk -F ':' '{print $2}')
    ZERONET_MAIL_ADDRESS=${mail_address//[[:blank:]]/}
    ZERONET_MAIL_PRIVATE_KEY=${mail_private_key//[[:blank:]]/}

    if [ ${#ZERONET_MAIL_ADDRESS} -lt 20 ]; then
        echo $"Address:    $ZERONET_MAIL_ADDRESS"
        echo $"Public key: $ZERONET_MAIL_PRIVATE_KEY"
        echo $'Unable to create zeronet mail address'
        exit 7358
    fi

    if [ ${#ZERONET_MAIL_PRIVATE_KEY} -lt 20 ]; then
        echo $"Address:    $ZERONET_MAIL_ADDRESS"
        echo $"Public key: $ZERONET_MAIL_PRIVATE_KEY"
        echo $'Unable to create zeronet mail private key'
        exit 1639
    fi

    if [ ! -d "/opt/zeronet/data/$ZERONET_MAIL_ADDRESS" ]; then
        echo $"Unable to find site directory: /opt/zeronet/data/$ZERONET_MAIL_ADDRESS"
        exit 7638
    fi

    echo $"ZeroNet Mail address:     $ZERONET_MAIL_ADDRESS"
    echo $"ZeroNet Mail private key: $ZERONET_MAIL_PRIVATE_KEY"
    cp -r /opt/zeronet/ZeroMail/* /opt/zeronet/data/$ZERONET_MAIL_ADDRESS

    if [ ! -d /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/data ]; then
        mkdir /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/data
    fi
    cp /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/data-default/data.json /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/data
    sed -i "s/MyZeroMail/$ZERONET_DEFAULT_MAIL_TITLE/g" /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/data/data.json
    sed -i "s/My ZeroMail./$ZERONET_DEFAULT_MAIL_TAGLINE/g" /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/data/data.json
    sed -i "s/ZeroMail Demo/$ZERONET_DEFAULT_MAIL_TITLE/g" /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/index.html
    sed -i "s|<h3 class=\"description\">.*|<h3 class=\"description\">$ZERONET_DEFAULT_MAIL_TAGLINE</h3>|g" /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/index.html
    sed -i "s/Mailging platform Demo/Mailging platform/g" /opt/zeronet/data/$ZERONET_MAIL_ADDRESS/content.json
    python zeronet.py siteSign $ZERONET_MAIL_ADDRESS $ZERONET_MAIL_PRIVATE_KEY

    # Add an avahi service
    echo '<?xml version="1.0" standalone="no"?><!--*-nxml-*-->' > /tmp/zeronet-mail.service
    echo '<!DOCTYPE service-group SYSTEM "avahi-service.dtd">' >> /tmp/zeronet-mail.service
    echo '<service-group>' >> /tmp/zeronet-mail.service
    echo '  <name replace-wildcards="yes">%h ZeroNet Mail</name>' >> /tmp/zeronet-mail.service
    echo '  <service>' >> /tmp/zeronet-mail.service
    echo '    <type>_zeronet._udp</type>' >> /tmp/zeronet-mail.service
    echo "    <port>$ZERONET_PORT</port>" >> /tmp/zeronet-mail.service
    echo "    <txt-record>$ZERONET_URL/$ZERONET_MAIL_ADDRESS</txt-record>" >> /tmp/zeronet-mail.service
    echo '  </service>' >> /tmp/zeronet-mail.service
    echo '</service-group>' >> /tmp/zeronet-mail.service
    cp /tmp/zeronet-mail.service /etc/avahi/services/zeronet-mail.service

    if [ ! -d /home/$MY_USERNAME/.config/zeronet ]; then
        mkdir -p /home/$MY_USERNAME/.config/zeronet
        chown -R $MY_USERNAME:$MY_USERNAME /home/$MY_USERNAME/.config
    fi
    echo "$ZERONET_URL/$ZERONET_MAIL_ADDRESS" > /home/$MY_USERNAME/.config/zeronet/mymail

    sed -i "s|ZeroNet Mail address.*|ZeroNet Mail address: $ZERONET_MAIL_ADDRESS|g" /home/$MY_USERNAME/README
    sed -i "s|ZeroNet Mail private key.*|ZeroNet Mail private key: $ZERONET_MAIL_PRIVATE_KEY|g" /home/$MY_USERNAME/README
}

function configure_zeronet_forum {
    echo $'Updating ZeroNet Forum'
    ZERONET_DEFAULT_FORUM_TITLE="${MY_USERNAME}'s Forum"

    cd /opt/zeronet
    python zeronet.py --batch siteCreate 2> /opt/zeronet/forum.txt
    if [ ! -f /opt/zeronet/forum.txt ]; then
        echo $'Unable to create ZeroNet forum'
        exit 47962
    fi
    forum_address=$(cat forum.txt | grep "Site address" | awk -F ':' '{print $2}')
    forum_private_key=$(cat forum.txt | grep "Site private key" | awk -F ':' '{print $2}')
    ZERONET_FORUM_ADDRESS=${forum_address//[[:blank:]]/}
    ZERONET_FORUM_PRIVATE_KEY=${forum_private_key//[[:blank:]]/}

    if [ ${#ZERONET_FORUM_ADDRESS} -lt 20 ]; then
        echo $"Address:    $ZERONET_FORUM_ADDRESS"
        echo $"Public key: $ZERONET_FORUM_PRIVATE_KEY"
        echo $'Unable to create zeronet forum address'
        exit 76352
    fi

    if [ ${#ZERONET_FORUM_PRIVATE_KEY} -lt 20 ]; then
        echo $"Address:    $ZERONET_FORUM_ADDRESS"
        echo $"Public key: $ZERONET_FORUM_PRIVATE_KEY"
        echo $'Unable to create zeronet forum private key'
        exit 87356
    fi

    if [ ! -d "/opt/zeronet/data/$ZERONET_FORUM_ADDRESS" ]; then
        echo $"Unable to find site directory: /opt/zeronet/data/$ZERONET_FORUM_ADDRESS"
        exit 7638
    fi

    echo $"Forum address:     $ZERONET_FORUM_ADDRESS"
    echo $"Forum private key: $ZERONET_FORUM_PRIVATE_KEY"
    cp -r /opt/zeronet/ZeroTalk/* /opt/zeronet/data/$ZERONET_FORUM_ADDRESS
    sed -i "s/ZeroBoard/$ZERONET_DEFAULT_FORUM_TITLE/g" /opt/zeronet/data/$ZERONET_FORUM_ADDRESS/index.html
    sed -i "s/ZeroTalk/$ZERONET_DEFAULT_FORUM_TITLE/g" /opt/zeronet/data/$ZERONET_FORUM_ADDRESS/index.html
    sed -i "s|Demo for dynamic, decentralized content publishing.|$ZERONET_DEFAULT_FORUM_TAGLINE|g" /opt/zeronet/data/$ZERONET_FORUM_ADDRESS/index.html
    sed -i 's/Messaging Board Demo/Messaging Board/g' /opt/zeronet/data/$ZERONET_FORUM_ADDRESS/content.json
    sed -i "s/ZeroBoard/$ZERONET_DEFAULT_FORUM_TITLE/g" /opt/zeronet/data/$ZERONET_FORUM_ADDRESS/content.json
    python zeronet.py siteSign $ZERONET_FORUM_ADDRESS $ZERONET_FORUM_PRIVATE_KEY --inner_path data/users/content.json

    # Add an avahi service
    echo '<?xml version="1.0" standalone="no"?><!--*-nxml-*-->' > /tmp/zeronet-forum.service
    echo '<!DOCTYPE service-group SYSTEM "avahi-service.dtd">' >> /tmp/zeronet-forum.service
    echo '<service-group>' >> /tmp/zeronet-forum.service
    echo '  <name replace-wildcards="yes">%h ZeroNet Forum</name>' >> /tmp/zeronet-forum.service
    echo '  <service>' >> /tmp/zeronet-forum.service
    echo '    <type>_zeronet._udp</type>' >> /tmp/zeronet-forum.service
    echo "    <port>$ZERONET_PORT</port>" >> /tmp/zeronet-forum.service
    echo "    <txt-record>$ZERONET_URL/$ZERONET_FORUM_ADDRESS</txt-record>" >> /tmp/zeronet-forum.service
    echo '  </service>' >> /tmp/zeronet-forum.service
    echo '</service-group>' >> /tmp/zeronet-forum.service
    sudo cp /tmp/zeronet-forum.service /etc/avahi/services/zeronet-forum.service

    if [ ! -d /home/$MY_USERNAME/.config/zeronet ]; then
        mkdir -p /home/$MY_USERNAME/.config/zeronet
        chown -R $MY_USERNAME:$MY_USERNAME /home/$MY_USERNAME/.config
    fi
    echo "$ZERONET_URL/$ZERONET_FORUM_ADDRESS" > /home/$MY_USERNAME/.config/zeronet/myforum

    sed -i "s|ZeroNet Forum address.*|ZeroNet Forum address: $ZERONET_FORUM_ADDRESS|g" /home/$MY_USERNAME/README
    sed -i "s|ZeroNet Forum private key.*|ZeroNet Forum private key: $ZERONET_FORUM_PRIVATE_KEY|g" /home/$MY_USERNAME/README
}

function configure_tox {
    echo $'Regenerating Tox bootstrap node keys'
    systemctl stop tox-bootstrapd.service
    if [ -f /var/lib/tox-bootstrapd/keys ]; then
        rm /var/lib/tox-bootstrapd/keys
    fi
    systemctl start tox-bootstrapd.service
    TOX_BOOTSTRAP_ID_FILE=/var/lib/tox-bootstrapd/pubkey.txt
    TOX_PUBLIC_KEY=$(cat /var/log/syslog | grep tox | grep "Public Key" | awk -F ' ' '{print $8}' | tail -1)
    if [ ${#TOX_PUBLIC_KEY} -lt 30 ]; then
        echo $'WARNING: Could not obtain the tox node public key'
        exit 46362
    fi

    # save the public key for later reference
    echo "$TOX_PUBLIC_KEY" > $TOX_BOOTSTRAP_ID_FILE

    echo $'Resetting toxic client'
    if [ -d /home/$MY_USERNAME/.config/tox ]; then
        rm -rf /home/$MY_USERNAME/.config/tox
        su -c "echo 'n
/nick P$PEER_ID
/exit
' | /usr/bin/toxic -d" - $MY_USERNAME
    fi
}

if [ -f /root/.initial_mesh_setup ]; then
    if [ $1 ]; then
        MY_USERNAME=$1
    fi

    # sleep in order to allow other daemons to start up
    sleep 15

    change_avahi_name
    regenerate_ssh_host_keys
    configure_zeronet_blog
    configure_zeronet_mail
    configure_zeronet_forum
    configure_tox
    configure_zeronet

    rm /root/.initial_mesh_setup
    systemctl disable mesh-setup.service
    touch /root/.mesh_setup_completed
    reboot
fi

exit 0
