#!/bin/bash
#
# .---.                  .              .
# |                      |              |
# |--- .--. .-.  .-.  .-.|  .-. .--.--. |.-.  .-. .--.  .-.
# |    |   (.-' (.-' (   | (   )|  |  | |   )(   )|  | (.-'
# '    '     --'  --'  -' -  -' '  '   -' -'   -' '   -  --'
#
#                    Freedom in the Cloud
#
# Useful git functions
#
# License
# =======
#
# Copyright (C) 2014-2016 Bob Mottram <bob@robotics.uk.to>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

function git_clone {
	repo_url="$1"
	destination_dir="$2"

	if [[ "$repo_url" == "ssh:"* ]]; then
		retval=$(get_friends_servers)
		if [[ $retval == "0" ]]; then
			if [ "${FRIENDS_MIRRORS_SERVER}" ]; then
				if [ ${#FRIENDS_MIRRORS_SERVER} -gt 2 ]; then
					if [ "$FRIENDS_MIRRORS_PASSWORD" ]; then
						if [ ${#FRIENDS_MIRRORS_PASSWORD} -gt 2 ]; then
							echo "sshpass -p \"$FRIENDS_MIRRORS_PASSWORD\" git clone $repo_url $destination_dir"
							sshpass -p "$FRIENDS_MIRRORS_PASSWORD" git clone "$repo_url" "$destination_dir"
							return
						fi
					fi
				fi
			fi
		fi
	fi
	echo "git clone $repo_url $destination_dir"
	git clone "$repo_url" "$destination_dir"
}

function git_pull {
	if [ ! $1 ]; then
		echo $'git_pull no repo specified'
	fi

	git stash
	git remote set-url origin $1
	git checkout master
	retval=$(get_friends_servers)
	if [ "${FRIENDS_MIRRORS_SERVER}" ]; then
		if [ ${#FRIENDS_MIRRORS_SERVER} -gt 2 ]; then
			if [ "$FRIENDS_MIRRORS_PASSWORD" ]; then
				if [ ${#FRIENDS_MIRRORS_PASSWORD} -gt 2 ]; then
					sshpass -p "$FRIENDS_MIRRORS_PASSWORD" git pull
					if [ $2 ]; then
						git checkout $2 -b $2
					fi
					return
				fi
			fi
		fi
	fi
	git pull

	if [ $2 ]; then
		# delete any existing branch
		git branch -D $2
		# check out the new branch
		git checkout $2 -b $2
		if [ ! "$?" = "0" ]; then
			echo $"Unable to checkout $1 $2"
			exit 72357
		fi
	fi
}

# NOTE: deliberately no exit 0
